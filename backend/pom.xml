<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.cajun.navy</groupId>
    <artifactId>frdemo-backend</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>frdemo-backend</name>
    <packaging>war</packaging>
    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.repository.protocol>https</maven.repository.protocol>
        <version.wildfly>37.0.0.Final</version.wildfly>
        <version.failsafe.plugin>3.5.3</version.failsafe.plugin>
        <version.wildfly.maven.plugin>5.1.3.Final</version.wildfly.maven.plugin>
        <maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url>
        <maven.redhat.repository.url>${maven.repository.protocol}://maven.repository.redhat.com/ga/</maven.redhat.repository.url>
        <maven.repo.url>${maven.repository.protocol}://repo1.maven.org/maven2/</maven.repo.url>
        <version.server.bom>8.0.8.GA-redhat-00006</version.server.bom>
        <version.server.xp>5.0.1.GA-redhat-00001</version.server.xp>
        <mapbox.version>4.5.0</mapbox.version>
        <version.checkstyle>8.5</version.checkstyle>
        <version.testcontainers>1.17.3</version.testcontainers>
        <frdemo.dbname>frdemo</frdemo.dbname>
        <frdemo.dbuser>${frdemo.dbname}</frdemo.dbuser>
        <frdemo.dbpass>${frdemo.dbname}</frdemo.dbpass>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-eap-ee-with-tools</artifactId>
                <version>${version.server.bom}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.bom</groupId>
                <artifactId>jboss-eap-xp-microprofile</artifactId>
                <version>${version.server.xp}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Repository Group</name>
            <url>${maven.repository.url}</url>
            <layout>default</layout>
        </repository>
        <repository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
            <id>jboss-enterprise-maven-repository</id>
            <name>JBoss Enterprise Maven Repository</name>
            <url>${maven.redhat.repository.url}</url>
            <layout>default</layout>
        </repository>
        <repository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
            <id>mvn-repository-group</id>
            <name>public maven repo</name>
            <url>${maven.repo.url}</url>
            <layout>default</layout>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Repository Group</name>
            <url>${maven.repository.url}</url>
        </pluginRepository>
        <pluginRepository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>jboss-enterprise-maven-repository</id>
            <name>JBoss Enterprise Maven Repository</name>
            <url>${maven.redhat.repository.url}</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencies>

        <!-- Import the CDI API, we use provided scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the Common Annotations API (JSR-250), we use provided scope
            as the API is included in JBoss EAP -->
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JAX-RS API, we use provided scope as the API is included in JBoss EAP -->
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta.ws.rs-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.ejb</groupId>
            <artifactId>jakarta.ejb-api</artifactId>
            <scope>provided</scope>
        </dependency>


        <!-- Json API -->
        <dependency>
            <groupId>jakarta.json.bind</groupId>
            <artifactId>jakarta.json.bind-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>jakarta.json</groupId>
            <artifactId>jakarta.json-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the resteasy-jaxrs API, we use provided scope as the API is included in JBoss EAP XP -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-core-spi</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Mapbox API -->
        <dependency>
            <groupId>com.mapbox.mapboxsdk</groupId>
            <artifactId>mapbox-sdk-services</artifactId>
            <version>${mapbox.version}</version>
        </dependency>

        <!-- Import the Reactive Messaging API, we use provided scope as the API is included in WildFly -->
        <dependency>
            <groupId>org.eclipse.microprofile.reactive.messaging</groupId>
            <artifactId>microprofile-reactive-messaging-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the Reactive Streams Operators API, we use provided scope as the API is included in WildFly -->
        <dependency>
            <groupId>org.eclipse.microprofile.reactive-streams-operators</groupId>
            <artifactId>microprofile-reactive-streams-operators-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the Reactive Streams API, we use provided scope as the API is included in WildFly -->
        <dependency>
            <groupId>org.reactivestreams</groupId>
            <artifactId>reactive-streams</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the Kafka Client API, we use provided scope as the API is included in WildFly -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- Import the SmallRye Kafka API, we use provided scope as the API is included in WildFly -->
        <dependency>
            <groupId>io.smallrye.reactive</groupId>
            <artifactId>smallrye-reactive-messaging-kafka-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the MicroProfile Config API -->
        <dependency>
            <groupId>org.eclipse.microprofile.config</groupId>
            <artifactId>microprofile-config-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Cloud Events Core API-->
        <dependency>
            <groupId>io.cloudevents</groupId>
            <artifactId>cloudevents-core</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
            <groupId>io.cloudevents</groupId>
            <artifactId>cloudevents-kafka</artifactId>
            <version>2.3.0</version>
        </dependency>
        <!-- Testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-depchain</artifactId>
            <type>pom</type>
            <scope>test</scope>
        </dependency>
        <!-- Override deps to avoid CVE-affected versions -->
        <dependency>
            <groupId>org.apache.sshd</groupId>
            <artifactId>sshd-core</artifactId>
            <scope>test</scope>
            <version>2.8.0</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.remoting</groupId>
            <artifactId>jboss-remoting</artifactId>
            <scope>test</scope>
            <version>5.0.25.SP1-redhat-00001</version>
        </dependency>
        <!-- Override deps to avoid CVE-affected versions -->

        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <version>${version.testcontainers}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>kafka</artifactId>
            <version>${version.testcontainers}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <!-- Set the name of the WAR, used as the context root when the app is deployed -->
        <finalName>${project.artifactId}</finalName>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.wildfly.plugins</groupId>
                    <artifactId>wildfly-maven-plugin</artifactId>
                    <version>${version.wildfly.maven.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ejb-plugin</artifactId>
                    <version>${version.ejb.plugin}</version>
                    <configuration>
                        <!-- Tell Maven we are using EJB -->
                        <ejbVersion>3.2</ejbVersion>
                    </configuration>
                </plugin>
                <!-- Checkstyle -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${version.checkstyle.plugin}</version>
                    <configuration>
                        <configLocation>wildfly-checkstyle/checkstyle.xml</configLocation>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        <sourceDirectories>
                            <directory>${project.build.sourceDirectory}</directory>
                        </sourceDirectories>
                        <resourceIncludes>**/*.properties,**/*.xml</resourceIncludes>
                        <includeTestResources>true</includeTestResources>
                        <includeResources>true</includeResources>
                        <consoleOutput>true</consoleOutput>
                        <failsOnError>true</failsOnError>
                        <failOnViolation>true</failOnViolation>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.wildfly.checkstyle</groupId>
                            <artifactId>wildfly-checkstyle-config</artifactId>
                            <version>1.0.8.Final</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>check-style</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>checkstyle</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.2</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>package</goal>
                                </goals>
                                <configuration>
                                    <discover-provisioning-info>
                                        <version>${version.wildfly}</version>
                                        <verbose>true</verbose>
                                        <add-ons>
                                            <add-on>postgresql</add-on>
                                        </add-ons>
                                    </discover-provisioning-info>
                                    <packaging-scripts>
                                        <packaging-script>
                                            <scripts>
                                                <script>${project.build.scriptSourceDirectory}/setup.cli</script>
                                            </scripts>
                                        </packaging-script>
                                    </packaging-scripts>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- An optional Arquillian testing profile that executes tests in your JBoss EAP instance.
                 This profile will start a new JBoss EAP instance, and execute the test, shutting it down when done.
                 Run with: mvn clean verify -Parq-managed -->
            <id>arq-managed</id>

            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <defaultGoal>verify</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>groovy-maven-plugin</artifactId>
                        <version>2.1.1</version>
                        <executions>
                            <execution>
                                <id>kafka</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <source>
                                        def image = org.testcontainers.utility.DockerImageName.parse("confluentinc/cp-kafka")
                                                .withTag("7.2.1")
                                        def kafka = new org.testcontainers.containers.KafkaContainer(image)
                                        kafka.start()
                                        project.properties.setProperty('kafka.server', kafka.bootstrapServers)
                                    </source>
                                </configuration>
                            </execution>
                            <execution>
                                <id>postgres</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <source>
                                        db = new org.testcontainers.containers.PostgreSQLContainer("postgres:latest")
                                                .withDatabaseName("${frdemo.dbname}")
                                                .withUsername("${frdemo.dbuser}")
                                                .withPassword("${frdemo.dbpass}")
                                        db.start()
                                        project.properties.setProperty('jdbc.url', db.getJdbcUrl())
                                    </source>
                                </configuration>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.testcontainers</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${version.testcontainers}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.testcontainers</groupId>
                                <artifactId>kafka</artifactId>
                                <version>${version.testcontainers}</version>
                            </dependency>
                            <dependency>
                                <groupId>org.apache.kafka</groupId>
                                <artifactId>kafka-clients</artifactId>
                                <version>3.0.0</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>${version.failsafe.plugin}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                                <configuration>
                                    <systemPropertyVariables>
                                        <arquillian.launch>jboss</arquillian.launch>
                                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
                                        <jboss.home>${project.basedir}/target/wildfly-${version.wildfly}</jboss.home>
                                        <org.wildfly.datasources.postgresql.connection-url>${jdbc.url}</org.wildfly.datasources.postgresql.connection-url>
                                        <kafka.server>${kafka.server}</kafka.server>
                                        <mapbox.access.token>${env.MAPBOX_TOKEN}</mapbox.access.token>
                                    </systemPropertyVariables>
                                    <redirectTestOutputToFile>false</redirectTestOutputToFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
